#! /bin/sh

# Do NOT "set -e"
#set -x

# Read configuration variable file if it is present
#loads Racket RACKET_VERSION, INIT_FILE, LOG_FILE, RACKET_COMMAND
CONFIG=${OPENSHIFT_REPO_DIR}.openshift/action_hooks/load_config
[ -r $CONFIG ] && . $CONFIG

DESC="Arc Launch Script"
NAME=arc
DAEMON=${OPENSHIFT_REPO_DIR}.openshift/action_hooks/webserver.rc
DAEMON_ARGS=""
PIDFILE=${OPENSHIFT_TMP_DIR}arc.pid
SCRIPTNAME=${OPENSHIFT_REPO_DIR}${NAME}
CMD="${ARC_HOME}/arc"

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

do_start()
{
    WSARG="${OPENSHIFT_REPO_DIR}/main.arc"
    nohup ${CMD} ${WSARG} ${DAEMON_ARGS} >/dev/null 2>${OPENSHIFT_DIY_LOG_DIR}/launch_errors.log &
    echo $! >> ${PIDFILE}
}

#
# Function that stops the daemon/service
#
do_stop()
{
    killall ${CMD}
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
	#
	# If the daemon can reload its configuration without
	# restarting (for example, when it is sent a SIGHUP),
	# then implement that here.
	#
	#start-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE --name $NAME
	return 0
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && echo "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && echo 0 ;;
		2) [ "$VERBOSE" != no ] && echo 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && echo "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && echo 0 ;;
		2) [ "$VERBOSE" != no ] && echo 1 ;;
	esac
	;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
  #reload|force-reload)
	#
	# If do_reload() is not implemented then leave this commented out
	# and leave 'force-reload' as an alias for 'restart'.
	#
	#log_daemon_msg "Reloading $DESC" "$NAME"
	#do_reload
	#log_end_msg $?
	#;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	echo "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) echo 0 ;;
			1) echo 1 ;; # Old process is still running
			*) echo 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		echo 1
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

